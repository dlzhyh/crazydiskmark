     """
        i = 0


        while self.benchmarkRunning:


            output = json.loads(
                self.executeCmd(
                    f"./scripts/{benchmarks[i]}.sh {self.directoryChoose.get_filename()}"
                )
            )
            if i == 0:
                bw_bytes = output["jobs"][0]["read"]["bw_bytes"]
                self.seq1mq8t1R.set_text(f"{humanfriendly.format_size(bw_bytes)}/s")
            elif i == 1:
                bw_bytes = output["jobs"][0]["write"]["bw_bytes"]
                self.seq1mq8t1W.set_text(f"{humanfriendly.format_size(bw_bytes)}/s")
            elif i == 2:
                bw_bytes = output["jobs"][0]["read"]["bw_bytes"]
                self.seq1mq1t1R.set_text(f"{humanfriendly.format_size(bw_bytes)}/s")
            elif i == 3:
                bw_bytes = output["jobs"][0]["write"]["bw_bytes"]
                self.seq1mq1t1W.set_text(f"{humanfriendly.format_size(bw_bytes)}/s")
            elif i == 4:
                bw_bytes = output["jobs"][0]["read"]["bw_bytes"]
                self.rnd4kq32t16R.set_text(f"{humanfriendly.format_size(bw_bytes)}/s")
            elif i == 5:
                bw_bytes = output["jobs"][0]["write"]["bw_bytes"]
                self.rnd4kq32t16W.set_text(f"{humanfriendly.format_size(bw_bytes)}/s")
            elif i == 6:
                bw_bytes = output["jobs"][0]["read"]["bw_bytes"]
                self.rnd4kq1t1R.set_text(f"{humanfriendly.format_size(bw_bytes)}/s")
            else:
                bw_bytes = output["jobs"][0]["write"]["bw_bytes"]
                self.rnd4kq1t1W.set_text(f"{humanfriendly.format_size(bw_bytes)}/s")

            print(f"{humanfriendly.format_size(bw_bytes)}/s")

            i = i + 1
            if i == len(benchmarks):
                self.benchmarkRunning = False

         self.stopBechmark()
            """